🌟 Day 76: GFG160 Challenge 🌟

🔗 Problem: Implement Pow

💡 Approach: Divide & Conquer
1️⃣ If e is even: power(b, e) = power(b, e/2) * power(b, e/2).
2️⃣ If e is odd: power(b, e) = b * power(b, e/2) * power(b, e/2).

✅ Time Complexity: O(log e), Space Complexity: O(log e). 🚀

// C++ program to calculate pow(b, e)
#include <iostream>
using namespace std;

double power(double b, int e) {
  
    // Base Case: pow(b, 0) = 1
    if (e == 0)
        return 1;
  
    if (e < 0)
        return 1 / power(b, -e);
      
    double temp = power(b, e / 2);
    
    if (e % 2 == 0)
        return temp * temp;
    else
        return b * temp * temp;
}

int main() {
    double b = 3.0;
    int e = 5;
    double res = power(b, e);
    cout << res;
    return 0;
}
